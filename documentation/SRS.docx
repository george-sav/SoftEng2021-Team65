Έγγραφο απαιτήσεων λογισμικού (SRS)
ΠΡΟΣΑΡΜΟΓΗ ΤΟΥ ΑΝΤΙΣΤΟΙΧΟΥ ΕΓΓΡΑΦΟΥ ΤΟΥ ΠΡΟΤΥΠΟΥ ISO/IEC/IEEE 29148:2011

[Electroweb]
1.	Εισαγωγή
1.1	Εισαγωγή: σκοπός του λογισμικού
Ο σκοπός αυτού του λογισμικού είναι η υποστήριξη του χρήστη κατά την λειτουργία φόρτισης του ηλεκτρικού οχήματός του σε σταθμό φόρτισης μέσω λειτουργιών πρόβλεψης κόστους, επιλογής προγράμματος φόρτισης και επιλογών πληρωμής καθώς και η ανάκτηση δεδομένων φόρτισης οχημάτων για οικονομικές ενέργειες τόσο από τον καταναλωτή όσο και από τον εκάστοτε πάροχο υπηρεσιών.
1.2	Διεπαφές (interfaces)
1.2.1	Διεπαφές με εξωτερικά συστήματα 
Το λογισμικό συνδέεται με την βάση δεδομένων του σταθμού φόρτισης για να επιτύχει την συλλογή και την ανάλυση στοιχείων. Επίσης, θα χρησιμοποιήσει το Alpha Bank - WEB Banking API για επίτευξη πληρωμών μέσω της εφαρμογής.
1.2.2	Διεπαφές με το χρήστη
Η διεπαφή χρήστη του λογισμικού εξυπηρετεί στη λειτουργία LOGIN/LOGOUT καθώς και στη διαδικασία δημιουργίας νέου λογαριασμού χρήστη. Κατόπιν, ανάλογα το είδος του λογαριασμού του εκάστοτε χρήστη, τον παραπέμπει στην κατάλληλη για εκείνον διεπαφή. Πιο συγκεκριμένα:
Για λογαριασμό ιδιοκτήτη οχήματος τού επιτρέπει να ανατρέχει στα στοιχεία του προφίλ του και να τα επεξεργάζεται, να “συνδέει” ένα νέο όχημα με τον λογαριασμό του, να συλλέγει και να προβάλλει δεδομένα ιστορικού φόρτισης των οχημάτων του (κατανάλωση, χρόνος φόρτισης, κατάσταση μπαταρίας κτλ), να επιλέγει τρόπο και πρόγραμμα φόρτισης του αυτοκινήτου του, να προβάλλει δεδομένα της φόρτισης κατά την εξέλιξη της διαδικασίας, το αναμενόμενο κόστος για κάθε σταθμό φόρτισης, το υποστηριζόμενο τιμολόγιο καθώς και τον εκτιμώμενο χρόνο διεκπεραίωσης της και, τέλος, να πληρώνει για την κάθε φόρτιση ή και για την περιοδική του συνδρομή με πιστωτική ή χρεωστική κάρτα.
Για λογαριασμό ιδιοκτήτη σταθμού φόρτισης τού επιτρέπει να ανατρέχει στα στοιχεία του προφίλ του και να τα επεξεργάζεται, να “συνδέει” τον σταθμό του και τον τραπεζικό λογαριασμό του με τον λογαριασμό του στην εφαρμογή μέσω μίας διαδικασίας επαλήθευσης, να συλλέγει και να προβάλλει δεδομένα ιστορικού φόρτισης οχημάτων, να επεξεργάζεται δεδομένα φόρτισης οχημάτων με χρήση γραφημάτων και πινάκων, να εκδίδει τους περιοδικούς λογαριασμούς συνδρομών των χρηστών του σταθμού του και να διεκπεραιώνει την ανάληψη αυτών των πληρωμών μέσω της εφαρμογής.
2.	Αναφορές - πηγές πληροφοριών
N/A
3.	Προδιαγραφές απαιτήσεων λογισμικού
3.1	Περιπτώσεις χρήσης: 
3.1.1	ΠΕΡΙΠΤΩΣΗ ΧΡΗΣΗΣ 1: Φόρτιση ηλεκτρικού οχήματος από τον ιδιοκτήτη
3.1.1.1	Χρήστες (ρόλοι) που εμπλέκονται
Ιδιοκτήτης αυτοκινήτου ως χρήστης της εφαρμογής (υπεύθυνος για είσοδο) και το UI της εφαρμογής ως εξυπηρετητής (υπεύθυνο για έξοδο)
3.1.1.2	Προϋποθέσεις εκτέλεσης
Ο χρήστης απαιτείται να έχει κάνει log in στον λογαριασμό του στην εφαρμογή, να έχει ένα ηλεκτρικό αυτοκίνητο το οποίο έχει καταχωρήσει στην εφαρμογή και να μεταβεί σε έναν σταθμό φόρτισης
3.1.1.3	Περιβάλλον εκτέλεσης
UI και DBMS εφαρμογής
Σταθμός φόρτισης
3.1.1.4	Δεδομένα εισόδου 
Credentials του χρήστη (έγκυρα αν επιτευχθεί το authentication και το log in)
Επιλογή αυτοκινήτου που θα φορτιστεί από τα καταχωρημένα οχήματα του χρήστη στην εφαρμογή (για ανάκτηση των δεδομένων από την εφαρμογή όπως car_id του database της εφαρμογής ή το serial number του οχήματος) (έγκυρο όταν όντως έχουμε καταχωρήσει τα συγκεκριμένα οχήματα στην εφαρμογή)
Επιλογή προγράμματος φόρτισης (κανονική φόρτιση, ταχεία φόρτιση κτλ) (πάντα έγκυρο)
Επιλογή τρόπου πληρωμής (άμεση έκδοση απόδειξης/τιμολογίου στον πάροχο, ένταξη στον περιοδικό λογαριασμό/συνδρομή του χρήστη) (πάντα έγκυρο)
3.1.1.5	Παράμετροι
Λίστα οχημάτων χρήστη (έγκυρη εάν δεν είναι κενή και ανταποκρίνεται στην πραγματική ιδιοκτησία του χρήστη σε οχήματα)
Ιστορικό δεδομένων φόρτισης οχημάτων χρήστη (preset από τον κατασκευαστή εάν είναι η πρώτη φόρτιση του οχήματος, αλλιώς συλλεχθέντα από την εφαρμογή - πάντα έγκυρα)
Τρέχοντα στοιχεία οχήματος (όπως η στάθμη της μπαταρίας κτλ) (έγκυρα εφόσον συλλέγονται σωστά από το σύστημα)
3.1.1.6	Αλληλουχία ενεργειών - επιθυμητή συμπεριφορά
1.	Ο χρήστης πατάει στο κουμπί “Φόρτιση Αυτοκινήτου” στο UI
2.	Το UI εμφανίζει την λίστα των οχημάτων που έχει καταχωρήσει στην εφαρμογή (τα οποία μπορεί και να δει στη σελίδα “To Garage μου” του UI)
3.	Ο χρήστης επιλέγει το αυτοκίνητο που θέλει να φορτίσει
4.	Το UI εμφανίζει το μήνυμα “Παρακαλώ συνδέστε το όχημα με τον σταθμό φόρτισης” και αναμένει την  σύνδεση εμφανίζοντας το κουμπί επιβεβαίωσης 
5.	Ο χρήστης συνδέει το αυτοκίνητο με τον σταθμό φόρτισης και πατάει το κουμπί επιβεβαίωσης
6.	Το UI εμφανίζει μια λίστα με τα παρεχόμενα προγράμματα φόρτισης (πχ κανονική φόρτιση, ταχεία φόρτιση κτλ)
7.	Ο χρήστης επιλέγει το επιθυμητό πρόγραμμα 
8.	Το UI επικοινωνεί με τον σταθμό και εκκινεί τη διαδικασία φόρτισης του οχήματος σύμφωνα με το μοντέλο του αυτοκινήτου, τα προηγούμενα δεδομένα φόρτισής του και το επιλεγμένο πρόγραμμα
9.	Κατά τη διάρκεια της φόρτισης, το UI εμφανίζει στον χρήστη διάφορα δεδομένα σχετικά με την τρέχουσα φόρτιση (όπως επίπεδο μπαταρίας, ισχύς κινητήρα, εκτιμώμενος χρόνος ολοκλήρωσης της φόρτισης, αναμενόμενο κόστος κλπ) καθώς και το κουμπί “Διακοπή φόρτισης”
10.	Μετά το πέρας της φόρτισης, το UI εμφανίζει το μήνυμα “Αποσυνδέστε το όχημά σας” και αναμένει την αποσύνδεση εμφανίζοντας το κουμπί επιβεβαίωσης
11.	Ο χρήστης αποσυνδέει το όχημά του από τον σταθμό και πατάει το κουμπί επιβεβαίωσης
12.	Το UI εμφανίζει μία λίστα με τους παρεχόμενους τρόπους πληρωμής ((α) Ένταξη στον περιοδικό λογαριασμό του χρήστη ή (β) Πληρωμή μεμονωμένης φόρτισης)
13.	Ο χρήστης επιλέγει τον τρόπο πληρωμής
14.	Αν επέλεξε τον (α), το UI εντάσσει την χρέωση στον περιοδικό λογαριασμό του χρήστη και εμφανίζει μήνυμα ευχαρίστησης για τη χρήση. Αν επέλεξε το (β), εκκινεί τη διαδικασία πληρωμής με κάρτα
15.	Η εφαρμογή συλλέγει και αποθηκεύει τα στοιχεία της φόρτισης
Οι εναλλακτικές ροές που προκύπτουν από απρόβλεπτες καταστάσεις και σφάλματα περιέχονται στα διαγράμματα UML sequence και activity
3.1.1.7	Δεδομένα εξόδου
Δεδομένα σχετικά με την τρέχουσα φόρτιση: επίπεδο μπαταρίας, ισχύς κινητήρα, εκτιμώμενος χρόνος ολοκλήρωσης της φόρτισης, αναμενόμενο κόστος, τελικό κόστος και χρόνος φόρτισης που ολοκληρώνεται, τιμολόγιο/απόδειξη, ημερομηνία/ώρα/τοποθεσία φόρτισης
3.1.1.8	Παρατηρήσεις 
Ν/Α

3.1.2	ΠΕΡΙΠΤΩΣΗ ΧΡΗΣΗΣ 2: Ανάκτηση δεδομένων φόρτισης για έκδοση λογαριασμών και ανάλυσή τους από ιδιοκτήτη σταθμού
3.1.2.1	Χρήστες (ρόλοι) που εμπλέκονται
Ιδιοκτήτης σταθμού ως χρήστης της εφαρμογής (υπεύθυνος για είσοδο) και το UI της εφαρμογής ως εξυπηρετητής (υπεύθυνο για έξοδο)
3.1.2.2	Προϋποθέσεις εκτέλεσης
Ο χρήστης απαιτείται να έχει κάνει log in στον λογαριασμό του στην εφαρμογή, να είναι (επαληθευμένα και στην εφαρμογή) ιδιοκτήτης σταθμού ηλεκτρικής φόρτισης και να έχει πραγματοποιηθεί τουλάχιστον μία φόρτιση σε αυτό το σταθμό
3.1.2.3	Περιβάλλον εκτέλεσης
UI και DBMS εφαρμογής
3.1.2.4	Δεδομένα εισόδου 
Credentials του χρήστη (έγκυρα αν επιτευχθεί το authentication και το log in)
Δεδομένα φόρτισης οχημάτων από το DBMS της εφαρμογής που έχουν συλλεχθεί
Επιλογή χρηστών από την λίστα πελατών (έγκυρη άμα έχει επιλεχθεί τουλάχιστον ένας χρήστης)
Επιλογή οχημάτων από την λίστα οχημάτων πελατών (έγκυρη άμα έχει επιλεχθεί τουλάχιστον ένα όχημα ή ένας πελάτης -που επιλέγει όλα του τα οχήματα)
3.1.2.5	Παράμετροι
Λίστα πελατών (έγκυρη εάν δεν είναι κενή και ανταποκρίνεται στους πελάτες που έχουν πραγματοποιήσει φόρτιση στον συγκεκριμένο σταθμό)
Λίστα οχημάτων κάθε πελάτη της παραπάνω λίστας (έγκυρη εάν δεν είναι κενή και ανταποκρίνεται στα οχήματα των συγκεκριμένων πελατών)
Ιστορικό δεδομένων φόρτισης οχημάτων χρήστη (preset από τον κατασκευαστή εάν είναι η πρώτη φόρτιση του οχήματος, αλλιώς συλλεχθέντα από την εφαρμογή - πάντα έγκυρα)
3.1.2.6	Αλληλουχία ενεργειών - επιθυμητή συμπεριφορά
1.	Ο χρήστης πατάει το κουμπί “Λίστα πελατών” στο UI
2.	Το UI εμφανίζει την λίστα των πελατών που είναι εγγεγραμμένοι στην εφαρμογή και που έχουν χρησιμοποιήσει τον σταθμό φόρτισης του χρήστη. Για κάθε πελάτη που εμφανίζεται στη λίστα θα υπάρχει η επιλογή ανάπτυξης περιεχομένου που θα εμφανίζει το σύνολο των καταχωρημένων οχημάτων για τον συγκεκριμένο πελάτη.
3.	Ο χρήστης επιλέγει ένα ή περισσότερα οχήματα και (a) πατάει το κουμπί “Ανάλυση δεδομένων φόρτισης” ή (β) πατάει το κουμπί “Έκδοση και αποστολή λογαριασμού”:
a.	Το UI εμφανίζει οθόνη αναμονής καθώς το σύστημα συλλέγει από το DBMS και αναλύει τα δεδομένα φόρτισης των επιλεγμένων οχημάτων. Το UI εμφανίζει τα αποτελέσματα αυτής της ανάλυσης σε μορφή πινάκων και διαγραμμάτων. 
b.	Το UI εμφανίζει οθόνη αναμονής καθώς το σύστημα εκδίδει τους λογαριασμούς των επιλεγμένων οχημάτων και τους αποστέλλει στο email που έχει ορίσει κάθε πελάτης καθώς και στην εφαρμογή στο κινητό τους μέσω push notification. Το UI εμφανίζει μήνυμα επιτυχίας έκδοσης και αποστολής λογαριασμών, ενώ δίνει και την επιλογή αποθήκευσης των εν λόγω τιμολογίων στην κινητή συσκευή του χρήστη.
Οι εναλλακτικές ροές που προκύπτουν από απρόβλεπτες καταστάσεις και σφάλματα περιέχονται στα διαγράμματα UML sequence και activity

3.1.2.7	Δεδομένα εξόδου
Πίνακες και διαγράμματα που έχουν προκύψει από την ανάλυση των δεδομένων φόρτισης των οχημάτων των πελατών
Τιμολόγια λογαριασμών που εκδίδονται
Email που αποστέλλονται
3.1.2.8	Παρατηρήσεις 
N/A
3.2	Απαιτήσεις επιδόσεων
Απαιτείται υψηλή ταχύτητα επεξεργασίας (επεξεργαστική ισχύς) αιτημάτων των χρηστών (ιδιοκτητών σταθμών και οχημάτων) από τον κεντρικό server της εφαρμογής ώστε να περιορίσουμε τον χρόνο αναμονής του χρήστη. Για παράδειγμα, θέλουμε ένα ανώτατο όριο 10 δευτερολέπτων επεξεργασίας αιτημάτων, ακόμα και με μεγάλο backlog από αιτήματα, κρατώντας τους χρόνους εμφάνισης των οθονών αναμονής στο ελάχιστο.
3.3	Απαιτήσεις οργάνωσης δεδομένων
3.3.1	Απαιτήσεις και περιορισμοί πρόσβασης σε δεδομένα
Πρόσβαση στα δεδομένα πρέπει να έχουν μόνο οι authorised χρήστες. Συγκεκριμένα, κάθε ιδιοκτήτης οχήματος έχει πρόσβαση και μπορεί να επεξεργαστεί τα δεδομένα του προφίλ του (π.χ. όνομα, διεύθυνση, email κτλ) και τα δεδομένα των αυτοκινήτων που έχει καταχωρήσει στην εφαρμογή (εκτός από τα σταθερά στοιχεία κάθε μοντέλου), ενώ έχει πρόσβαση για προβολή αλλά όχι για επεξεργασία στα δεδομένα ιστορικού φόρτισης των οχημάτων του (και στην επεξεργασμένη/ανελυμένη από το σύστημα μορφή τους ως πίνακες/διαγράμματα) και του ιστορικού πληρωμών του. Κάθε ιδιοκτήτης σταθμού φόρτισης έχει πρόσβαση και μπορεί να επεξεργαστεί τα δεδομένα του προφίλ του και τα δεδομένα σχετικά με τον σταθμό του (π.χ. μέγιστη παρεχόμενη ηλεκτρική ισχύς, αριθμός θέσεων φόρτισης κτλ), ενώ έχει πρόσβαση για προβολή αλλά όχι για επεξεργασία στα δεδομένα χρήσης του σταθμού του, στα δεδομένα φόρτισης όλων των οχημάτων για τις φορτίσεις που έλαβαν χώρα στον δικό του σταθμό καθώς και στα δεδομένα πληρωμών των αντίστοιχων πελατών. Όλοι οι χρήστες της εφαρμογής δεν έχουν πρόσβαση σε δεδομένα που δεν περιγράφονται παραπάνω.
3.4	Περιορισμοί σχεδίασης
Στον σχεδιασµό ακολουθούνται τα συνήθη πρότυπα ονοµατοδοσίας της Javascript, τα συνήθη πρότυπα της Node.js και της MySQL
Λεπτομερής τεχνική τεκμηρίωση των περιορισμών σχεδίασης οι οποίοι επιβάλλονται από απαιτήσεις συμμόρφωσης σε πρότυπα, κανονισμούς, ή άλλους περιορισμούς του έργου. Περιλαμβάνεται η πολιτική ονοματολογίας οντοτήτων δεδομένων και πεδίων. Τέτοιοι περιορισμοί μπορεί να επιβάλλονται από τη χρήση βιβλιοθηκών, frameworks, περιβαλλόντων ανάπτυξης κλπ
3.5	Λοιπές απαιτήσεις
3.5.1	Απαιτήσεις διαθεσιμότητας λογισμικού
Απαιτείται ένα υψηλό επίπεδο διαθεσιμότητας της υπηρεσίας ώστε να μπορεί να εξυπηρετήσει τον μεγάλο εκτιμώμενο όγκο χρηστών όλες τις ώρες της ημέρας.
3.5.2	Απαιτήσεις ασφάλειας
Θα χρησιμοποιηθούν τα απαραίτητα πρωτόκολλα ασφαλείας, καθώς και τεχνικές κρυπτογράφησης δεδομένων, έτσι ώστε να επιτευχθούν οι περιορισμοί πρόσβασης δεδομένων, όπως αυτοί περιγράφονται στην παράγραφο 3.3.1. πάντα με σεβασμό στο προσωπικό απόρρητο και την προστασία από τρίτους και εξωτερικά πρόσωπα.
3.5.3	Απαιτήσεις συντήρησης
Θα γίνονται συχνοί κύκλοι ελέγχου, συντήρησης και αναβάθμισης τόσο του hardware όσο και του software, με συχνά version updates στα εκάστοτε store στα οποία διατίθεται η εφαρμογή.

